package org.generation.employee.manager;

import org.generation.employee.Employee;

/*
 * La clase Manager sirve como subclase (clase hija), por lo tanto debe extender (heredar) desde la superclase (clase Employee) 
 * para poder acceder a los atributos y métodos de la superclase
 */

public class Manager extends Employee{
	//1. Atributos
	private int antiguedad;
	private double bono; //único para Manager
	
	//2. Constructor que hereda parámetros
	public Manager(String nombreCompleto, int id, double salario, String puesto, int antiguedad, double bono) {
		super(nombreCompleto, id, salario, puesto); //se hereda de la superclase Employee
		this.antiguedad = antiguedad;
		this.bono = bono;
	}//constructor
	
	
	//3. Getters y Setters
	
	
	
	//4. Métodos del usuario
	public void organizarReunion() {
		System.out.println("El manager " + this.getNombreCompleto() + " convoca a una reunión");
	}
	
	//Método que me permite obtener el método de calcular salario sin un bono, es decir, el método calcularSalario() de la clase Employee
	double salarioBase = super.getSalario();	
	
	//Overriding (anulación de métodos)
	/*
	 * En la empresa los managers reciben un bono de $1000 al cumplir su primer año de antiguedad.
	 * Despúes de recibir su primer bono, cada año recibe un bono de $500
	 */
	
	/*
	 * Verificar la antiguedad. Si es mayor o igual a 1 es true, si no, es false
	 * Crear método para verificar la antiguedad y calcular el bono a recibir
	 */
	
	public void calacularBono() {
		if(this.antiguedad >= 1) {
			double 
		}
		else {
			this.setBono(0);
			System.out.println("No hay bono");
		}
	}
	
	public void calcularSalario() {
		
	}
	
	//5. toString
	
	
	
	
}//class